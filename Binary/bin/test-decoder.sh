#!/bin/bash

file=BinaryDecoder.java

if [ ! -f "$file" ]; then
    echo -e "Error: File '$file' not found.\nTest failed."
    exit 1
fi

num_right=0
total=0
line="________________________________________________________________________"
compiler=
interpreter=
language=
if [ "${file##*.}" = "py" ]; then
    if [ ! -z "$PYTHON_PATH" ]; then
        interpreter=$(which python.exe)
    else
        interpreter=$(which python3.2)
    fi
    command="$interpreter $file"
    echo -e "Testing $file\n"
elif [ "${file##*.}" = "java" ]; then
    language="java"
    command="java ${file%.java}"
    echo -n "Compiling $file..."
    javac $file
    echo -e "done\n"
fi

run_test_args() {
    (( ++total ))
    echo -n "Running test $total..."
    expected=$2
    received=$( $command $1 2>&1 | tr -d '\r' )
    if [ "$expected" = "$received" ]; then
        echo "success"
        (( ++num_right ))
    else
        echo -e "failure\n\nExpected$line\n$expected\nReceived$line\n$received\n"
    fi
}

run_test_args "" "Usage: java BinaryDecoder <input file>"
run_test_args "input.txt input.txt" "Usage: java BinaryDecoder <input file>"
rm -f input.txt
run_test_args "input.txt" "Error: File 'input.txt' not found."
(cat << ENDOFTEXT
0100100001101001
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "Hi"
(cat << ENDOFTEXT
01010100011010000110100101110011001000000110100101110011001000000110001101101111011011110110110000101110
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "This is cool."
(cat << ENDOFTEXT
010101000110100001101001011100110010000001101111011101010111010001110000011101010111010000100000011000110110111101101110011101000110000101101001011011100111001100100000011011010111010101101100011101000110100101110000011011000110010100100000011011000110100101101110011001010111001100101110
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001000101110
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001100101110
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "This output contains multiple lines."$'\n'"This is line 2."$'\n'"This is line 3."
(cat << ENDOFTEXT
00110000001100010011001000110011001101000011010100110110001101110011100000111001
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "0123456789"
(cat << ENDOFTEXT
01000001010000100100001101000100010001010100011001000111010010000100100101001010010010110100110001001101010011100100111101010000010100010101001001010011010101000101010101010110010101110101100001011001010110100110000101100010011000110110010001100101011001100110011101101000011010010110101001101011011011000110110101101110011011110111000001110001011100100111001101110100011101010111011001110111011110000111100101111010
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
(cat << ENDOFTEXT
01111110001000010100000000100011001001000010010101011110001001100010101000101000001010010010101101011011010111010011110100101101001111000011111000111111
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "~!@#$%^&*()+[]=-<>?"
(cat << ENDOFTEXT
01010100011010000110100101110011001000000110111101110101011101000111000001110101011101000010000001100011011011110110111001110100011000010110100101101110011100110010000001101101011101010110110001110100011010010111000001101100011001010010000001101100011010010110111001100101011100110010111
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001000101110
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001100101110
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "Error: Invalid character at the end of line 1."
(cat << ENDOFTEXT
010101000110100001101001011100110010000001101111011101010111010001110000011101010111010000100000011000110110111101101110011101000110000101101001011011100111001100100000011011010111010101101100011101000110100101110000011011000110010100100000011011000110100101101110011001010111001100101110
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001000101
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001100101110
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "Error: Invalid character at the end of line 2."
(cat << ENDOFTEXT
010101000110100001101001011100110010000001101111011101010111010001110000011101010111010000100000011000110110111101101110011101000110000101101001011011100111001100100000011011010111010101101100011101000110100101110000011011000110010100100000011011000110100101101110011001010111001100101110
010101000110100001101001011100110010000001101001011100110010000001101100011010010110111001100101001000000011001000101110
01010100011010000110100101110011001000000110100101110011001000000110110001101001011011100110010100100000001100110
ENDOFTEXT
) > input.txt
run_test_args "input.txt" "Error: Invalid character at the end of line 3."
rm -f input.txt

echo -e "\nTotal tests run: $total"
echo -e "Number correct : $num_right"
echo -n "Percent correct: "
echo "scale=2; 100 * $num_right / $total" | bc

if [ "$language" = "java" ]; then
   echo -e -n "\nRemoving class files..."
   rm -f *.class
   echo "done"
fi
